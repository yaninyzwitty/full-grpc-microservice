// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.28.0--rc3
// source: user.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PhotoSharingService_CreateUser_FullMethodName    = "/photo_sharing_service.PhotoSharingService/CreateUser"
	PhotoSharingService_CreatePost_FullMethodName    = "/photo_sharing_service.PhotoSharingService/CreatePost"
	PhotoSharingService_CreateComment_FullMethodName = "/photo_sharing_service.PhotoSharingService/CreateComment"
	PhotoSharingService_LikePost_FullMethodName      = "/photo_sharing_service.PhotoSharingService/LikePost"
	PhotoSharingService_LikeComment_FullMethodName   = "/photo_sharing_service.PhotoSharingService/LikeComment"
)

// PhotoSharingServiceClient is the client API for PhotoSharingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// Photo Sharing Service
type PhotoSharingServiceClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error)
	CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*Post, error)
	CreateComment(ctx context.Context, in *CreateCommentInput, opts ...grpc.CallOption) (*Comment, error)
	LikePost(ctx context.Context, in *LikePostRequest, opts ...grpc.CallOption) (*LikePostResponse, error)
	LikeComment(ctx context.Context, in *LikeCommentRequest, opts ...grpc.CallOption) (*LikeCommentResponse, error)
}

type photoSharingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPhotoSharingServiceClient(cc grpc.ClientConnInterface) PhotoSharingServiceClient {
	return &photoSharingServiceClient{cc}
}

func (c *photoSharingServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*User, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(User)
	err := c.cc.Invoke(ctx, PhotoSharingService_CreateUser_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoSharingServiceClient) CreatePost(ctx context.Context, in *CreatePostRequest, opts ...grpc.CallOption) (*Post, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Post)
	err := c.cc.Invoke(ctx, PhotoSharingService_CreatePost_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoSharingServiceClient) CreateComment(ctx context.Context, in *CreateCommentInput, opts ...grpc.CallOption) (*Comment, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Comment)
	err := c.cc.Invoke(ctx, PhotoSharingService_CreateComment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoSharingServiceClient) LikePost(ctx context.Context, in *LikePostRequest, opts ...grpc.CallOption) (*LikePostResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LikePostResponse)
	err := c.cc.Invoke(ctx, PhotoSharingService_LikePost_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *photoSharingServiceClient) LikeComment(ctx context.Context, in *LikeCommentRequest, opts ...grpc.CallOption) (*LikeCommentResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(LikeCommentResponse)
	err := c.cc.Invoke(ctx, PhotoSharingService_LikeComment_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhotoSharingServiceServer is the server API for PhotoSharingService service.
// All implementations must embed UnimplementedPhotoSharingServiceServer
// for forward compatibility.
//
// Photo Sharing Service
type PhotoSharingServiceServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*User, error)
	CreatePost(context.Context, *CreatePostRequest) (*Post, error)
	CreateComment(context.Context, *CreateCommentInput) (*Comment, error)
	LikePost(context.Context, *LikePostRequest) (*LikePostResponse, error)
	LikeComment(context.Context, *LikeCommentRequest) (*LikeCommentResponse, error)
	mustEmbedUnimplementedPhotoSharingServiceServer()
}

// UnimplementedPhotoSharingServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPhotoSharingServiceServer struct{}

func (UnimplementedPhotoSharingServiceServer) CreateUser(context.Context, *CreateUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedPhotoSharingServiceServer) CreatePost(context.Context, *CreatePostRequest) (*Post, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePost not implemented")
}
func (UnimplementedPhotoSharingServiceServer) CreateComment(context.Context, *CreateCommentInput) (*Comment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateComment not implemented")
}
func (UnimplementedPhotoSharingServiceServer) LikePost(context.Context, *LikePostRequest) (*LikePostResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LikePost not implemented")
}
func (UnimplementedPhotoSharingServiceServer) LikeComment(context.Context, *LikeCommentRequest) (*LikeCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LikeComment not implemented")
}
func (UnimplementedPhotoSharingServiceServer) mustEmbedUnimplementedPhotoSharingServiceServer() {}
func (UnimplementedPhotoSharingServiceServer) testEmbeddedByValue()                             {}

// UnsafePhotoSharingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PhotoSharingServiceServer will
// result in compilation errors.
type UnsafePhotoSharingServiceServer interface {
	mustEmbedUnimplementedPhotoSharingServiceServer()
}

func RegisterPhotoSharingServiceServer(s grpc.ServiceRegistrar, srv PhotoSharingServiceServer) {
	// If the following call pancis, it indicates UnimplementedPhotoSharingServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PhotoSharingService_ServiceDesc, srv)
}

func _PhotoSharingService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoSharingServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhotoSharingService_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoSharingServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoSharingService_CreatePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoSharingServiceServer).CreatePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhotoSharingService_CreatePost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoSharingServiceServer).CreatePost(ctx, req.(*CreatePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoSharingService_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommentInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoSharingServiceServer).CreateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhotoSharingService_CreateComment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoSharingServiceServer).CreateComment(ctx, req.(*CreateCommentInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoSharingService_LikePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoSharingServiceServer).LikePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhotoSharingService_LikePost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoSharingServiceServer).LikePost(ctx, req.(*LikePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PhotoSharingService_LikeComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhotoSharingServiceServer).LikeComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhotoSharingService_LikeComment_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhotoSharingServiceServer).LikeComment(ctx, req.(*LikeCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PhotoSharingService_ServiceDesc is the grpc.ServiceDesc for PhotoSharingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PhotoSharingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "photo_sharing_service.PhotoSharingService",
	HandlerType: (*PhotoSharingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _PhotoSharingService_CreateUser_Handler,
		},
		{
			MethodName: "CreatePost",
			Handler:    _PhotoSharingService_CreatePost_Handler,
		},
		{
			MethodName: "CreateComment",
			Handler:    _PhotoSharingService_CreateComment_Handler,
		},
		{
			MethodName: "LikePost",
			Handler:    _PhotoSharingService_LikePost_Handler,
		},
		{
			MethodName: "LikeComment",
			Handler:    _PhotoSharingService_LikeComment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
